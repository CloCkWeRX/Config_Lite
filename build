#!/usr/bin/env php
<?php

/**
 * simple buildscript
 *
 * PHP version 5.2.6+
 *
 * @file      build
 * @author    Patrick C. Engel <info@pc-e.org>
 * @copyright 2011 info@pc-e.org
 * @license   http://www.gnu.org/copyleft/lesser.html  LGPL License 2.1
 * @link      https://github.com/pce/config_lite
 */


function target_phpcs() 
{
	$cs = 'phpcs';
	$target = 'Config/Lite.php';
	// execute phpcs
	printf("== %s\n", 'Coding Standard');
	system($cs .' -v '.$target);
	printf("\n");
}
$targets[] = 'target_phpcs';

function target_test()
{
	$phpunit = 'phpunit';
	$test_target = 'tests/Config_LiteTest.php';
	printf("== %s\n", 'Unit Tests');
	// execute phpunit
	system($phpunit . ' ' . $test_target); 
	printf("\n");
}
$targets[] = 'target_test';

function target_doc() 
{
	$target = 'Config/Lite.php';
	system('phpdoc -o HTML:frames:earthli -f '.$target.' -t phpdocs');
	printf("\n");
}
$targets[] = 'target_doc';

function target_clean() 
{
	system('rm -r ./phpdocs 2> /dev/null');
	printf("\n");
}
$targets[] = 'target_clean';

function target_beautify() 
{
	system('php_beautifier -f Lite.php -o Lite_.php');
	printf("\n");
}
$targets[] = 'target_beautify';

function target_package()
{
	// Used to create the Package
	/* 
	# vim /usr/bin/pear
	# since i compiled env.php without zlib:
	PHP_PEAR_PHP_BIN="/usr/bin/php"
	*/
        $pear = "/usr/bin/pear";
	system($pear.' package ./package.xml');
	printf("\n");
}
$targets[] = 'target_package';

function target_validate() 
{
        $pear = "/usr/bin/pear";
	printf("== %s\n", 'validate pear package');
        system('find ./ -name \'*.tgz\' -exec '
		$pear .' package-validate "{}" \;');
	printf("\n");
}
$targets[] = 'target_validate';

function target_default()
{
	target_phpcs();
	target_test();
}
$targets[] = 'target_default';

// ---------------------------------------------------------------------

function print_usage($prg, $err=false)
{
	fprintf($err?STDERR:STDOUT, "Usage: %s [<target>]\n\n", $prg);
	$err && fprintf(STDERR, "    run with -h too see all targets\n\n");
	fprintf($err?STDERR:STDOUT, "    without any target, %s invokes the `task_default'.\n", $prg);
	fprintf($err?STDERR:STDOUT, "    Example: %s default\n\n", $prg);
	$err && exit(1);
}


if ($argc == 1 ) {
	target_default();
}

if ($argc > 1) {
	$target = 'target_'.$argv[1];
	if (in_array($target, $targets)) {
		$target();
	} elseif ($argv[1] == '-h' || $argv[1] == '--help') {
		print_usage($argv[0]);
		$avail_targets = str_replace('target_', '', $targets);
		printf("\n  %s\n\n", 'available targets:');
		foreach ($avail_targets as $option) {
			printf("    %s\n", $option);
		}
		printf("\n");
	} else {
		print_usage($argv[0], true);	
	}
}

